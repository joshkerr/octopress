<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Josh Kerr</title>
  <link href="http://joshkerr.com/atom.xml" rel="self"/>
  <link href="http://joshkerr.com/"/>
  <updated>2011-10-25T08:17:07-05:00</updated>
  <id>http://joshkerr.com/</id>
  <author>
    <name>Josh Kerr</name>
    
  </author>

  
  <entry>
    <title>Google Reader and Mac/iOS RSS readers that sync</title>
    <link href="http://joshkerr.com/2011/10/greader-sync/"/>
    <updated>2011-10-25T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/greader-sync</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://inessential.com/2011/10/24/google_reader_and_mac_ios_rss_readers_th&quot;&gt;Google Reader and Mac/iOS RSS readers that sync&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;The recent &lt;a href=&quot;http://googlereader.blogspot.com/2011/10/upcoming-changes-to-reader-new-look-new.html&quot;&gt;announcement of changes coming for Google Reader&lt;/a&gt; worries me some. Though I don’t use Google Reader directly, I — like many iPhone, iPad, and Mac users — use RSS readers that sync via Google Reader.&lt;/p&gt;
&lt;p&gt;This announcement isn’t just a reminder of the fragility of the system: it removes some features that people use. Google Reader’s social and sharing features are going away in favor of integration with Google+.&lt;/p&gt;
&lt;p&gt;This makes sense from Google’s point of view — a single, Google-wide social network should be better than a separate network for each Google app.&lt;/p&gt;
&lt;p&gt;Nevertheless, there are users who will miss the current, about-to-disappear features. (See &lt;a href=&quot;http://nick.typepad.com/blog/2011/10/what-the-upcoming-google-reader-changes-mean-for-feeddemon.html&quot;&gt;What the Upcoming Google Reader Changes Mean for FeedDemon&lt;/a&gt; for an example of how one RSS reader will have to change.)&lt;/p&gt;
&lt;p&gt;When I say that the system is fragile, I don’t mean that Google Reader itself is fragile. I mean that using it as a syncing system for other apps is fragile. There are a couple things that RSS reader developers know, that the average RSS reader user probably doesn’t know, which will make this more apparent:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The Google Reader API is undocumented, unsupported, and unofficial. This is unlike &lt;a href=&quot;http://code.google.com/apis/maps/&quot;&gt;Google Maps&lt;/a&gt; and others which do have documented and official APIs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Because the API is not official, there is no commitment to keeping it working.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Though RSS reader developers have received much-appreciated unofficial support from Google, that’s not the same as building a feature on solid ground. Smart developers are rightly uncomfortable relying on undocumented, unofficial, unsupported APIs.&lt;/p&gt;
&lt;p&gt;But, because syncing is so important for so many RSS reader users, developers have had to gamble. With syncing part of the definition of a minimum viable RSS reader, and with Google Reader the only option for syncing, the choice to use Google Reader is more necessity than choice.&lt;/p&gt;
&lt;h4&gt;Questions about the future&lt;/h4&gt;
&lt;p&gt;The gamble has paid off so far, with the exception of the features about to be replaced. It’s been an especially good thing for RSS reader users, who can mix-and-match clients on different platforms, who can move with relative ease between one client and another. (The situation is similar to Twitter clients: users are not stuck with one client from one particular developer.)&lt;/p&gt;
&lt;p&gt;While I remain optimistic about the future of Google Reader and apps that sync via Google Reader, there are a few reasons for concern:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Though Google Reader is a mature app, its lack of an official, documented, supported API sends a message, intended or not, about its importance to Google. And Google has cut apps before, even high-profile apps like &lt;a href=&quot;http://googlewave.blogspot.com/&quot;&gt;Google Wave&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;FeedDemon author &lt;a href=&quot;http://groups.google.com/group/fougrapi/browse_thread/thread/b0eb7f67939c627&quot;&gt;Nick Bradbury asked&lt;/a&gt; on the unofficial API support list if Google Reader is being retired. At this writing, a couple days after the recent announcement, the question remains unanswered.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Despite all the &lt;a href=&quot;http://twitter.com/#!/search/googlereader&quot;&gt;#googlereader&lt;/a&gt; and @googlereader traffic on Twitter since the announcement, the &lt;a href=&quot;http://twitter.com/#!/googlereader&quot;&gt;@googlereader&lt;/a&gt; Twitter account has been silent. (At this writing.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The wording of the recent Google Reader announcement emphasized how users could export their data. While that’s a good thing — being able to move one’s data is important — the emphasis made it seem like a request or a warning. That characterization is mine, yes, but it’s shared by other developers (not just RSS reader developers) that have read that announcement. This may not have been the author’s intention: it’s possible the author was being careful and doing the right thing by mentioning data exporting. But it didn’t read that way, at least to some developers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We don’t know what the value of Google Reader is to Google. It doesn’t appear to have ads a la search or Gmail, though ads do appear in feeds via Google’s AdSense for feeds, and that presumably makes money. Does Google Reader feed the search engine ranking system? Does it exist to help ensure the goodwill of influential writers who use Google Reader? I can speculate, but I don’t know, which is my point.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At any rate, I remain optimistic, because I don’t have any solid reason to expect things to change.&lt;/p&gt;
&lt;p&gt;But Google Reader &lt;em&gt;has&lt;/em&gt; just changed, and some syncing RSS readers will lose some features, and I take that as a reminder that it could change in a way that breaks syncing, and Google would not have broken any official APIs.&lt;/p&gt;
&lt;p&gt;I’m not an RSS reader developer any more. But if I were, I’d start looking for an alternative syncing system right now.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://inessential.com/&quot;&gt;inessential.com&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Canon EOS-1D X first hands-on (video)</title>
    <link href="http://joshkerr.com/2011/10/eos-1dx-handson/"/>
    <updated>2011-10-25T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/eos-1dx-handson</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.engadget.com/2011/10/25/canon-eos-1d-x-hands-on-video/&quot;&gt;Canon EOS-1D X first hands-on (video)&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;div&gt;&lt;a href=&quot;http://www.engadget.com/2011/10/25/canon-eos-1d-x-hands-on-video/&quot;&gt;&lt;img src=&quot;http://www.blogcdn.com/www.engadget.com/media/2011/10/2011-10-25-img1503.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/div&gt;
Professional photographers know the drill: every few years, &lt;a href=&quot;http://www.engadget.com/tag/Canon/&quot;&gt;Canon&lt;/a&gt; or &lt;a href=&quot;http://www.engadget.com/tag/Nikon/&quot;&gt;Nikon&lt;/a&gt; announces a game-changing DSLR, often prompting top photogs to unload their complete kits and switch to another system in a never-ending attempt to shoot with the best. This time, Canon is first out of the gate, with its flagship EOS-1D X &amp;#8211; the latest in a series that dates back to 2001 with the EOS-1D. As you&amp;#8217;ve probably noticed, the company&amp;#8217;s new top model looks virtually identical to its decade-old ancestor, but is otherwise a far cry from that four megapixel CCD sensor-sporting dinosaur. We&amp;#8217;ve been anxiously awaiting an opportunity to check out Canon&amp;#8217;s new $6,800 18.1 megapixel full-frame model since first getting word of the beastly camera &lt;a href=&quot;http://www.engadget.com/2011/10/18/canon-announces-eos-1d-x-full-frame-18mp-sensor-14-fps-204-80/&quot;&gt;last week&lt;/a&gt;, and just had a chance to go hands-on during the company&amp;#8217;s Pro Solutions event in London. Jump past the break for our impressions and a video walkthrough.&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://www.engadget.com&quot;&gt;Engadget&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Trick shot basketball frisbee competition</title>
    <link href="http://joshkerr.com/2011/10/trick-shot/"/>
    <updated>2011-10-22T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/trick-shot</id>
    <content type="html">&lt;div class=&quot;embed video youtube&quot;&gt;&lt;object width=&quot;600&quot; height=&quot;337&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/W_2eU1ykV3k?version=3&amp;feature=oembed&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;embed src=&quot;http://www.youtube.com/v/W_2eU1ykV3k?version=3&amp;feature=oembed&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;600&quot; height=&quot;337&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;


&lt;p&gt;Great trick shot competition.  Is there computer generated effects going on here or are these guys really that good?&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Star Wars meets Pulp Fiction</title>
    <link href="http://joshkerr.com/2011/10/star-wars-meets-pulp-fiction/"/>
    <updated>2011-10-22T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/star-wars-meets-pulp-fiction</id>
    <content type="html">&lt;div class=&quot;embed video youtube&quot;&gt;&lt;object width=&quot;600&quot; height=&quot;337&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/rajCyWb9BFA?version=3&amp;feature=oembed&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;embed src=&quot;http://www.youtube.com/v/rajCyWb9BFA?version=3&amp;feature=oembed&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;600&quot; height=&quot;337&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;

</content>
  </entry>
  
  <entry>
    <title>Sick rendition of Zeppelin by Michael Winslow</title>
    <link href="http://joshkerr.com/2011/10/sick-zeppelin-rendition/"/>
    <updated>2011-10-22T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/sick-zeppelin-rendition</id>
    <content type="html">&lt;div class=&quot;embed video youtube&quot;&gt;&lt;object width=&quot;600&quot; height=&quot;337&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/QxcCC2g1Ke0?version=3&amp;feature=oembed&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;embed src=&quot;http://www.youtube.com/v/QxcCC2g1Ke0?version=3&amp;feature=oembed&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;600&quot; height=&quot;337&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;


&lt;p&gt;This is an amazing rendition of Whole Lotta Love by Michael Winslow on a talk show from Norway.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Japanese girl explains Star Wars</title>
    <link href="http://joshkerr.com/2011/10/japanese-girl-explains-starwars/"/>
    <updated>2011-10-22T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/japanese-girl-explains-starwars</id>
    <content type="html">&lt;div class=&quot;embed video youtube&quot;&gt;&lt;object width=&quot;600&quot; height=&quot;337&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/-eCSHJINqCo?version=3&amp;feature=oembed&quot;&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot;&gt;&lt;embed src=&quot;http://www.youtube.com/v/-eCSHJINqCo?version=3&amp;feature=oembed&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;600&quot; height=&quot;337&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;


&lt;p&gt;Hilarious.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>MarkdownPad editor for Windows</title>
    <link href="http://joshkerr.com/2011/10/3957640176/"/>
    <updated>2011-10-21T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/3957640176</id>
    <content type="html">&lt;p&gt;Finally there is a decent Markdown editor for Windows.&amp;nbsp; Called MarkdownPad it has a dual pane view with source on the left and preview on the right.&lt;/p&gt;


&lt;p&gt; &lt;p&gt;&lt;img src=&quot;http://i.imgur.com/yOAkB.png&quot;&gt;&lt;/p&gt; &lt;p&gt;You can download it &lt;a href=&quot;http://markdownpad.com/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Android Face Login</title>
    <link href="http://joshkerr.com/2011/10/3957130797/"/>
    <updated>2011-10-19T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/3957130797</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://joshkerr.s3.amazonaws.com/images/image.png&quot;&gt;&lt;img style=&quot;background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://joshkerr.s3.amazonaws.com/images/image_thumb.png&quot; width=&quot;500&quot; height=&quot;272&quot;&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt; &lt;p&gt;What were the developers at Google thinking when they came up with a Face login feature?&amp;nbsp; Not only didn’t this feature work properly when Google demoed it at their big reveal for Ice Cream Sandwich the new Android OS, but it doesn’t solve a customer pain.&amp;nbsp; Why would you devote time on stage to showing off something like this?&amp;nbsp; &lt;/p&gt; &lt;p&gt;There are so many problems with this technology.&amp;nbsp; First, the phones don’t have a fast enough processor to make the recognition even remotely useful.&amp;nbsp; It takes several seconds to properly align and then a few more to do the actual recognition.&amp;nbsp; By then I’d already have typed my password and been well into doing something productive on my phone.&amp;nbsp; This feature is simply a party gag, something to show off to those who have more useful iPhones.&lt;/p&gt; &lt;p&gt;Google is trying so hard to differentiate their product from the iOS products that they are forcing innovations that aren’t at all appealing.&lt;/p&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Jekyll bootstrap</title>
    <link href="http://joshkerr.com/2011/10/3956638173/"/>
    <updated>2011-10-17T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/3956638173</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://joshkerr.s3.amazonaws.com/images/image.png&quot;&gt;&lt;img style=&quot;background-image: none; border-bottom: 0px; border-left: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px&quot; title=&quot;image&quot; border=&quot;0&quot; alt=&quot;image&quot; src=&quot;http://joshkerr.s3.amazonaws.com/images/image_thumb.png&quot; width=&quot;504&quot; height=&quot;64&quot;&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt; &lt;p&gt;A great GUI toolkit for bootstrapping your website designed by the guys who built Twitter.&amp;nbsp; It has almost every possible GUI element that you could want and formatted to support a wide variety of browser types.&amp;nbsp;&amp;nbsp;&amp;nbsp; This github project is for the Jekyll version of that toolkit.&lt;/p&gt; &lt;p&gt;&lt;a href=&quot;http://nhoss2.github.com/jekyll-bootstrap&quot;&gt;Jekyll bootstrap&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Learn How to make Angry Birds (co.uk)</title>
    <link href="http://joshkerr.com/2011/10/how-to-make-angry-birds/"/>
    <updated>2011-10-16T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/how-to-make-angry-birds</id>
    <content type="html">&lt;p&gt;This is really cool:&lt;/p&gt;


&lt;blockquote&gt;
&lt;h2&gt;Angry Birds&lt;/h2&gt;
&lt;p&gt;So, the game I’m going to be making is to be based on the extremely popular Angry Birds by Rovio, a AAA title &lt;a href=&quot;http://www.develop-online.net/news/37242/Angry-Birds-cost-Rovio-100k-has-made-50m&quot;&gt;which cost some $140k USD to make&lt;/a&gt;.&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/screenShot.jpg&quot;&gt;&lt;img title=&quot;screenShot&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/screenShot.jpg&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;375&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Angry Birds&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Obviously, since its just me making this I will have to take a few short-cuts and will be concentrating on the core part of the game.&lt;/p&gt;
&lt;h2&gt;Cloning&lt;/h2&gt;
&lt;p&gt;Before I start I should mention that I do not condone the cloning of games in any way; what I’m doing in these tutorials is purely for educational purposes and I have no plans to release the game at the end of this.&lt;/p&gt;
&lt;h2&gt;Analysis&lt;/h2&gt;
&lt;p&gt;Ok, lets have a look at the requirements for a bare-bones version of the game:&lt;/p&gt;
&lt;h3&gt;Graphics&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Background, mid-ground and foreground layers&lt;/li&gt;
&lt;li&gt;Bird characters,&lt;/li&gt;
&lt;li&gt;Pig characters,&lt;/li&gt;
&lt;li&gt;Slingshot,&lt;/li&gt;
&lt;li&gt;Rigid body pieces – materials: wood, stone, glass in rectangle, square and triangle shapes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Code&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Camera&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Panning&lt;/li&gt;
&lt;li&gt;Parallax&lt;/li&gt;
&lt;li&gt;Zoom&lt;/li&gt;
&lt;li&gt;Object tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Collision detection&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Possible requirement for advanced broad-phase&lt;/li&gt;
&lt;li&gt;Various static and dynamic shapes – rectangles, triangles, circles&lt;/li&gt;
&lt;li&gt;Object colliding call-back system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Physics&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Very stable physics engine&lt;/li&gt;
&lt;li&gt;Integrated object sleeping system&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Editor&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Some kind of editor to allow layout of levels and creation of graphics. I’m using Flash CS4 for all this.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The Beginning&lt;/h2&gt;
&lt;p&gt;The first thing I’m going to tackle from that list is to get the world set up so that there is a nice looking environment and to root the project in something solid looking.&lt;/p&gt;
&lt;p&gt;I started with the podium that the birds gets launched from; its going to be a static object in the physics system and to keep things simple I’m going to compose all objects from primitive parts, so collision wise at least the podium will be made from some squares and triangles.&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/podium.png&quot;&gt;&lt;img title=&quot;podium&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/podium.png&quot; alt=&quot;&quot; width=&quot;224&quot; height=&quot;64&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Podium&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, it’s covered with a repeating earth texture, so the first thing is to make this. Its actually quite easy to do:&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/repeatingEarth.png&quot;&gt;&lt;img title=&quot;repeatingEarth&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/repeatingEarth.png&quot; alt=&quot;&quot; width=&quot;600&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Process&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The first part is easy, just pick two vaguely earthy colours and paint one half of the texture in each colour, with a nice rough overlap in the midddle.&lt;/p&gt;
&lt;p&gt;Then, offset the image by half the width and height (I used photoshop’s offset filter) to get the image in the middle. Then you can rough up the middle edge as you did in the first image. Once you’re done you’ll have a nice infinitely repeatable texture.&lt;/p&gt;
&lt;p&gt;In order to actually apply this texture to an arbitrary object in Flash, you import the image onto the stage, then right click and and choose ‘Break apart’. Then you can use the eye-dropper tool to pick that texture as a fill texture which you can then apply to any shape with the paint bucket.&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/repeatDemo.png&quot;&gt;&lt;img title=&quot;repeatDemo&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/repeatDemo.png&quot; alt=&quot;&quot; width=&quot;153&quot; height=&quot;120&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Infinite repeats&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Because we’re making all collision objects from primitive shapes, we need to decide what basic shapes we’re going to be using. I chose these for the podium:&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/podiumShapes.png&quot;&gt;&lt;img title=&quot;podiumShapes&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/podiumShapes.png&quot; alt=&quot;&quot; width=&quot;179&quot; height=&quot;68&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Podium shapes&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;These can be rotated, duplicated and placed to form the podium shape:&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/podiumShapesComposed.png&quot;&gt;&lt;img title=&quot;podiumShapesComposed&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/podiumShapesComposed.png&quot; alt=&quot;&quot; width=&quot;242&quot; height=&quot;71&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Podium composed&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;So, when actually creating the shape for the visible part of the podium, its important to follow the exact same shape that you could compose only using the primitive collision shapes in various different configurations.&lt;/p&gt;
&lt;p&gt;This will start to become very useful later when we try to integrate the physics system with the graphics.&lt;/p&gt;
&lt;h2&gt;Foreground&lt;/h2&gt;
&lt;p&gt;The foreground consists of another tiling shape; the soil. This was made from a rectangle, and lots of ovals in Flash, just repeated and placed. Its important to make sure it tiles so pay attention at the edges and use grid snap.&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/foreground.png&quot;&gt;&lt;img title=&quot;foreground&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/foreground.png&quot; alt=&quot;&quot; width=&quot;224&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Foreground&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Mid-ground&lt;/h2&gt;
&lt;p&gt;Yet another tiling shape, this time rolling hills with a few far off plants; nothing out of the ordinary here, just make sure it tiles. You’ll want to make this one wider than the screen – I made mine roughly twice as wide:&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/midground.png&quot;&gt;&lt;img title=&quot;midground&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/midground-300x50.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;50&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Mid-ground&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;Yes, you guessed it, tiling shapes again – this one is roughly one screen in size:&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/background.png&quot;&gt;&lt;img title=&quot;background&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/background-300x217.png&quot; alt=&quot;&quot; width=&quot;300&quot; height=&quot;217&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Background&lt;/p&gt;
&lt;/div&gt;
&lt;h2&gt;Exporting&lt;/h2&gt;
&lt;p&gt;All these layers have been set to export for action-script in the Flash IDE; I’ve appended every name with &lt;em&gt;Fla &lt;/em&gt;so that I can tell in code which classes are from Flash and which are my own.&lt;/p&gt;
&lt;p&gt;Everything should now be exported as a .swc which you can enable in File-&amp;gt;Publish Settings-&amp;gt;Flash-&amp;gt;Export SWC.&lt;/p&gt;
&lt;p&gt;Then you can import this SWC into your project in your favourite flash code compiler; I’m using &lt;a href=&quot;http://www.sapphiresteel.com/Products/amethyst-ide/article/amethyst-product-page&quot;&gt;Amythyst&lt;/a&gt; because I cannot live without Visual Studio.&lt;/p&gt;
&lt;h2&gt;Putting it together&lt;/h2&gt;
&lt;p&gt;Of course, the idea with all these separate layers is that the code will place and animate them separately to give a parallax effect as the camera pans/zooms around the world.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dimensions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I picked a screen size of 640×360 (wide-screen), and a world size of 2560×720 (four screens wide by two screens high). And I’ve centred the world at 0,0.&lt;/p&gt;
&lt;h2&gt;The Camera&lt;/h2&gt;
&lt;p&gt;Having a good camera class is fundamental to any game, particularly this one which requires lots of smooth pans and zooms.&lt;/p&gt;
&lt;p&gt;At the very least it should provide functions for converting coordinates between world space and screen space and visa versa.&lt;/p&gt;
&lt;p&gt;Because there are three layers of parallax at work, the camera needs to be able to position each one as it pans around the scene, so its constructor takes them as parameters:&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; &lt;span&gt;Camera&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;background&lt;/span&gt;:&lt;span&gt;MovieClip&lt;/span&gt;, midground:&lt;span&gt;MovieClip&lt;/span&gt;, foreground:&lt;span&gt;MovieClip&lt;/span&gt;, bird:Bird&lt;span&gt;)&lt;/span&gt;
&lt;span&gt;{&lt;/span&gt;
&#8230;
&lt;span&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The bird parameter is just a dummy at the moment which represents the focal point for the camera – it contains accessors for position so the camera can know where in the world it is.&lt;/p&gt;
&lt;p&gt;In order to get the camera to centre on the bird no matter where the bird is on screen we need to do a little bit of maths; forming what is known as the &lt;em&gt;world to screen&lt;/em&gt; matrix, so called because it transforms points in world space into screen space.&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; Update&lt;span&gt;(&lt;/span&gt; dt:&lt;span&gt;Number&lt;/span&gt; &lt;span&gt;)&lt;/span&gt; : &lt;span&gt;void&lt;/span&gt;
&lt;span&gt;{&lt;/span&gt;
    m_worldToScreen = &lt;span&gt;new&lt;/span&gt; Matrix&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
 
    m_worldToScreen.&lt;span&gt;translate&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; -m_bird.&lt;span&gt;m_Pos&lt;/span&gt;.&lt;span&gt;x&lt;/span&gt;, -m_bird.&lt;span&gt;m_Pos&lt;/span&gt;.&lt;span&gt;m_y&lt;/span&gt; &lt;span&gt;)&lt;/span&gt;;
    m_worldToScreen.&lt;span&gt;scale&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; m_scale.&lt;span&gt;m_x&lt;/span&gt;, m_scale.&lt;span&gt;m_y&lt;/span&gt; &lt;span&gt;)&lt;/span&gt;;
    m_worldToScreen.&lt;span&gt;translate&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; Constants.&lt;span&gt;kScreenDimensions&lt;/span&gt;.&lt;span&gt;m_x&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, Constants.&lt;span&gt;kScreenDimensions&lt;/span&gt;.&lt;span&gt;m_y&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt; &lt;span&gt;)&lt;/span&gt;;
 
    m_foreground.&lt;span&gt;transform&lt;/span&gt;.&lt;span&gt;matrix&lt;/span&gt; = m_worldToScreen;
 
    &lt;span&gt;// for screen-&amp;gt;world matrix&lt;/span&gt;
    m_screenToWorld = m_worldToScreen.&lt;span&gt;clone&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
    m_screenToWorld.&lt;span&gt;invert&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
&lt;span&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;What’s going on in the above function is: first the camera is centred on the bird, then any zoom is applied and finally we add on the centre of the screen to make sure the bird is in the centre (remember, 0,0 is the top left of the screen, not the centre).&lt;/p&gt;
&lt;p&gt;We then take this matrix and apply it as the transform for the foreground geometry, so in actual fact &lt;strong&gt;the geometry moves around the camera&lt;/strong&gt;, not the other way around – which is a bit difficult to get your head around at first.&lt;/p&gt;
&lt;p&gt;The first translate in the above snippet is easier to understand with this in mind – 0,0 is the destination for the world geometry, coming from the position of the bird and &lt;em&gt;0-m_bird.m_Pos&lt;/em&gt; is the vector which achieves that.&lt;/p&gt;
&lt;p&gt;Then I take a copy of this matrix and invert it so that I can do the opposite transform whenever I need to convert a point in screen-space to world-space.&lt;/p&gt;
&lt;p&gt;To get the parallax effect on the back and mid-ground layers, I do a similar piece of maths for each layer (each layer getting its own world-&amp;gt;screen matrix), the only change is that I divide the x translation by the layer’s z-depth, which causes them to move at different speeds.&lt;/p&gt;
&lt;p&gt;All this will work fine, but it won’t prevent the camera from leaving the bounds of the world. In order to do that we need to understand the camera’s relationship with the world.&lt;/p&gt;
&lt;p&gt;So, lets take a look at the world, the camera and their relationship:&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/figure1.png&quot;&gt;&lt;img title=&quot;figure1&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/figure1.png&quot; alt=&quot;&quot; width=&quot;585&quot; height=&quot;201&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Figure 1&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Figure 1&lt;/em&gt; shows the entire extents of the world and also one possible location for the camera. Note that the camera has the dimensions of the screen.&lt;/p&gt;
&lt;p&gt;In this configuration, the camera is actually showing a view which is partially outside the world, which should not be allowed to happen. In order to fix this problem we need to know exactly how far outside the camera is.&lt;/p&gt;
&lt;div&gt;&lt;a href=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/figure2.png&quot;&gt;&lt;img title=&quot;figure2&quot; src=&quot;http://www.wildbunny.co.uk/blog/wp-content/uploads/2011/05/figure2.png&quot; alt=&quot;&quot; width=&quot;586&quot; height=&quot;200&quot; /&gt;&lt;/a&gt;
&lt;p&gt;Figure 2&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Figure 2 shows the measurements we need to correct this problem (the red arrows) and also shows in green, the camera’s position after it has been corrected.&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;&lt;span&gt;public&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; Update&lt;span&gt;(&lt;/span&gt; dt:&lt;span&gt;Number&lt;/span&gt; &lt;span&gt;)&lt;/span&gt; : &lt;span&gt;void&lt;/span&gt;
&lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;//&lt;/span&gt;
    &lt;span&gt;// clamp camera to only show map&lt;/span&gt;
    &lt;span&gt;//&lt;/span&gt;
 
    &lt;span&gt;var&lt;/span&gt; translate:Vector2 = m_bird.&lt;span&gt;m_Pos&lt;/span&gt;.&lt;span&gt;m_Neg&lt;/span&gt;;
 
    &lt;span&gt;var&lt;/span&gt; screenHalfExtents:Vector2 = &lt;span&gt;new&lt;/span&gt; Vector2&lt;span&gt;(&lt;/span&gt;Constants.&lt;span&gt;kScreenDimensions&lt;/span&gt;.&lt;span&gt;m_x&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;, Constants.&lt;span&gt;kScreenDimensions&lt;/span&gt;.&lt;span&gt;m_y&lt;/span&gt;&lt;span&gt;/&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;.&lt;span&gt;Div&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;new&lt;/span&gt; Vector2&lt;span&gt;(&lt;/span&gt;m_scale.&lt;span&gt;m_x&lt;/span&gt;, m_scale.&lt;span&gt;m_y&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
    &lt;span&gt;var&lt;/span&gt; mapExtents:Vector2 = Constants.&lt;span&gt;kWorldAabb&lt;/span&gt;.&lt;span&gt;m_HalfExtents&lt;/span&gt;.&lt;span&gt;MulScalar&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; &lt;span&gt;2&lt;/span&gt; &lt;span&gt;)&lt;/span&gt;;
 
    &lt;span&gt;var&lt;/span&gt; topLeft:Vector2 = m_bird.&lt;span&gt;m_Pos&lt;/span&gt;.&lt;span&gt;Sub&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;screenHalfExtents&lt;span&gt;)&lt;/span&gt;;
    &lt;span&gt;var&lt;/span&gt; bottomRight:Vector2 = m_bird.&lt;span&gt;m_Pos&lt;/span&gt;.&lt;span&gt;Add&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;screenHalfExtents&lt;span&gt;)&lt;/span&gt;;
 
    &lt;span&gt;var&lt;/span&gt; correctLeft:&lt;span&gt;Number&lt;/span&gt; = &lt;span&gt;Math&lt;/span&gt;.&lt;span&gt;min&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;topLeft.&lt;span&gt;m_x&lt;/span&gt;+Constants.&lt;span&gt;kWorldAabb&lt;/span&gt;.&lt;span&gt;m_HalfExtents&lt;/span&gt;.&lt;span&gt;m_x&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
    &lt;span&gt;var&lt;/span&gt; correctTop:&lt;span&gt;Number&lt;/span&gt; = &lt;span&gt;Math&lt;/span&gt;.&lt;span&gt;min&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;topLeft.&lt;span&gt;m_y&lt;/span&gt;+Constants.&lt;span&gt;kWorldAabb&lt;/span&gt;.&lt;span&gt;m_HalfExtents&lt;/span&gt;.&lt;span&gt;m_y&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
 
    &lt;span&gt;var&lt;/span&gt; correctRight:&lt;span&gt;Number&lt;/span&gt; = &lt;span&gt;Math&lt;/span&gt;.&lt;span&gt;min&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;Constants.&lt;span&gt;kWorldAabb&lt;/span&gt;.&lt;span&gt;m_HalfExtents&lt;/span&gt;.&lt;span&gt;m_x&lt;/span&gt;-bottomRight.&lt;span&gt;m_x&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
    &lt;span&gt;var&lt;/span&gt; correctBottom:&lt;span&gt;Number&lt;/span&gt; = &lt;span&gt;Math&lt;/span&gt;.&lt;span&gt;min&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;Constants.&lt;span&gt;kWorldAabb&lt;/span&gt;.&lt;span&gt;m_HalfExtents&lt;/span&gt;.&lt;span&gt;m_y&lt;/span&gt;-bottomRight.&lt;span&gt;m_y&lt;/span&gt;, &lt;span&gt;0&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
 
    translate.&lt;span&gt;m_x&lt;/span&gt; += correctLeft - correctRight;
    translate.&lt;span&gt;m_y&lt;/span&gt; += correctTop - correctBottom;
 
        &#8230;
&lt;span&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The above is the code which calculates the red arrowed regions shown in Figure 2, and applies any corrections needed to the initial translation of the camera.&lt;/p&gt;
&lt;p&gt;There is one caveat to watch out for: the foreground layer is a child of the main MovieClip which makes up the game – this is essential because otherwise the camera would only be translating the foreground shape and not everything in the world, which would be all bad. However, because the camera is translating the main MovieClip, the mid and background layers cannot be children of it. Instead, they must be children of the &lt;strong&gt;stage&lt;/strong&gt;; this allows them to be translated independently to give the correct effect.&lt;/p&gt;
&lt;h2&gt;Create a tile strip&lt;/h2&gt;
&lt;p&gt;This is relatively simple, you just divide the width of the world by the width of a tile to get the number of repetitions, set the starting point and then just instance the correct MovieClip:&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;&lt;span&gt;private&lt;/span&gt; &lt;span&gt;function&lt;/span&gt; CreateTileStrip&lt;span&gt;(&lt;/span&gt; &lt;span&gt;start&lt;/span&gt;:Vector2, &lt;span&gt;type&lt;/span&gt;:&lt;span&gt;Class&lt;/span&gt; &lt;span&gt;)&lt;/span&gt;:&lt;span&gt;MovieClip&lt;/span&gt;
&lt;span&gt;{&lt;/span&gt;
    &lt;span&gt;var&lt;/span&gt; obj:&lt;span&gt;*&lt;/span&gt; = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
    &lt;span&gt;var&lt;/span&gt; mc:&lt;span&gt;MovieClip&lt;/span&gt; = &lt;span&gt;MovieClip&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; obj &lt;span&gt;)&lt;/span&gt;;
    &lt;span&gt;var&lt;/span&gt; tileRoot:&lt;span&gt;MovieClip&lt;/span&gt; = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;MovieClip&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; &lt;span&gt;)&lt;/span&gt;;
 
    &lt;span&gt;var&lt;/span&gt; worldWidth:&lt;span&gt;Number&lt;/span&gt; = Constants.&lt;span&gt;kWorldAabb&lt;/span&gt;.&lt;span&gt;m_HalfExtents&lt;/span&gt;.&lt;span&gt;m_x&lt;/span&gt;&lt;span&gt;*&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;;
    &lt;span&gt;var&lt;/span&gt; numTiles:&lt;span&gt;int&lt;/span&gt; = &lt;span&gt;(&lt;/span&gt;worldWidth&lt;span&gt;/&lt;/span&gt;mc.&lt;span&gt;width&lt;/span&gt;&lt;span&gt;)&lt;/span&gt; + &lt;span&gt;1&lt;/span&gt;;
 
    &lt;span&gt;for&lt;/span&gt; &lt;span&gt;(&lt;/span&gt; &lt;span&gt;var&lt;/span&gt; i:&lt;span&gt;int&lt;/span&gt; = &lt;span&gt;0&lt;/span&gt;; i&lt;span&gt;&amp;lt;&lt;/span&gt;numTiles; i++&lt;span&gt;)&lt;/span&gt;
    &lt;span&gt;{&lt;/span&gt;
        &lt;span&gt;var&lt;/span&gt; x:&lt;span&gt;Number&lt;/span&gt; = i&lt;span&gt;*&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;mc.&lt;span&gt;width&lt;/span&gt;-&lt;span&gt;1&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
 
        mc.&lt;span&gt;x&lt;/span&gt; = x + &lt;span&gt;start&lt;/span&gt;.&lt;span&gt;m_x&lt;/span&gt;;
        mc.&lt;span&gt;y&lt;/span&gt; = &lt;span&gt;start&lt;/span&gt;.&lt;span&gt;m_y&lt;/span&gt;-mc.&lt;span&gt;height&lt;/span&gt;;
 
        tileRoot.&lt;span&gt;addChild&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; mc &lt;span&gt;)&lt;/span&gt;;
 
        obj = &lt;span&gt;new&lt;/span&gt; &lt;span&gt;type&lt;/span&gt;&lt;span&gt;(&lt;/span&gt;&lt;span&gt;)&lt;/span&gt;;
        mc = &lt;span&gt;MovieClip&lt;/span&gt;&lt;span&gt;(&lt;/span&gt; obj &lt;span&gt;)&lt;/span&gt;;
    &lt;span&gt;}&lt;/span&gt;
 
    &lt;span&gt;return&lt;/span&gt; tileRoot;
&lt;span&gt;}&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And you call it like this:&lt;/p&gt;
&lt;div&gt;
&lt;div&gt;
&lt;pre&gt;m_backgroundLayer = CreateTileStrip&lt;span&gt;(&lt;/span&gt; bottomLeft, BackgroundTileFla &lt;span&gt;)&lt;/span&gt;;
m_midgroundLayer = CreateTileStrip&lt;span&gt;(&lt;/span&gt; bottomLeft, MidgroundTileFla &lt;span&gt;)&lt;/span&gt;;
m_foregroundLayer = CreateTileStrip&lt;span&gt;(&lt;/span&gt; bottomLeft, ForegroundTileFla &lt;span&gt;)&lt;/span&gt;;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;I was actually pleasantly surprised how easy it was to pass a class as a type in actionscript, much easier than in c# or c++ and it really makes it simple to tile any shape that you export from the Flash IDE.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>First thoughts on Siri</title>
    <link href="http://joshkerr.com/2011/10/first-thoughts-on-siri/"/>
    <updated>2011-10-15T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/first-thoughts-on-siri</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://joshkerr.s3.amazonaws.com/images/siri.png&quot;&gt;&lt;img style=&quot;background-image: none; padding-left: 0px; padding-right: 0px; display: inline; padding-top: 0px; border: 0px;&quot; title=&quot;siri&quot; src=&quot;http://joshkerr.s3.amazonaws.com/images/siri_thumb.png&quot; border=&quot;0&quot; alt=&quot;siri&quot; width=&quot;500&quot; height=&quot;289&quot; /&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;The iPhone 4S is super fast, runs iOS 5 which is chock full of goodness and comes with Siri which is arguably the best thing about it.  It is marketed as a personal assistant in your pocket.  For me, Siri is the Austin startup that was purchased last year and had an app in the App Store that had some potential but did not live up to its billing.&lt;/p&gt;


&lt;p&gt;After spending a day with Siri on the iPhone 4S I’m walking away with a completely different view.  Siri really is a personal assistant in your pocket.  You talk to it as if you were dictating instructions to a person.  It amazingly has the ability to recognize keywords and translate them into actual tasks.  It works great and opens the door to a whole new category of computing driven by voice.  Apple has integrated Siri into its own apps, but it remains unclear if they plan to enable an API to allow third party developers to tap into its power.  If they know what is good for them, they will.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Faceshift</title>
    <link href="http://joshkerr.com/2011/10/faceshift/"/>
    <updated>2011-10-08T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/faceshift</id>
    <content type="html">&lt;p&gt;&lt;img title=&quot;IWjTF.gif&quot; src=&quot;http://i.imgur.com/IWjTF.gif&quot; border=&quot;0&quot; alt=&quot;IWjTF.gif&quot; /&gt;&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Doggy AT-AT</title>
    <link href="http://joshkerr.com/2011/10/doggy-atat/"/>
    <updated>2011-10-08T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/doggy-atat</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://feedproxy.google.com/~r/boingboing/iBag/~3/WNt3ZxJsiKI/doggy-at-at.html&quot;&gt;Doggy AT-AT&lt;/a&gt;:&lt;/p&gt;


&lt;p&gt;&lt;img src=&quot;http://craphound.com/images/307674_245628275488785_162077150510565_748142_359200534_n.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;Laika the dog is &lt;em&gt;seriously&lt;/em&gt; styling in this AT-AT costume, created by Katie Mello.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://boingboing.net&quot;&gt;Boing Boing&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Steve Jobs Succumbs to Alternative Medicine</title>
    <link href="http://joshkerr.com/2011/10/jobs-succumbs-to-alt-medicine/"/>
    <updated>2011-10-06T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/jobs-succumbs-to-alt-medicine</id>
    <content type="html">&lt;p&gt;I&amp;#8217;m not sure if I believe this story, but if it is true, it is sad.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;http://www.skepticblog.org/2011/10/06/steve-jobs-succumbs-to-alternative-medicine/&quot;&gt;Steve Jobs Succumbs to Alternative Medicine&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;Most pancreatic cancers are aggressive and always terminal, but Steve was lucky (if you can call it that) and had a rare form called an islet cell neuroendocrine tumor, which is actually quite treatable with excellent survival rates — if caught soon enough. The median survival is about a decade, but it depends on how soon it’s removed surgically. Steve caught his very early, and should have expected to survive much longer than a decade. Unfortunately Steve relied on a naturopathic diet instead of early surgery. There is no evidence that diet has any effect on islet cell carcinoma. &lt;a href=&quot;http://tech.fortune.cnn.com/2008/06/13/steve-jobs-life-after-the-whipple/&quot;&gt;As he dieted for nine months&lt;/a&gt;, the tumor progressed, and took him from the high end to the low end of the survival rate.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Bell & Ross shuts down its website in honor of Jobs</title>
    <link href="http://joshkerr.com/2011/10/bell-ross-closes-website-steve-jobs/"/>
    <updated>2011-10-06T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/bell-ross-closes-website-steve-jobs</id>
    <content type="html">&lt;p&gt;&lt;img title=&quot;Screen Shot 2011-10-06 at 1.20.36 PM.png&quot; src=&quot;http://joshkerr.s3.amazonaws.com/images/Screen Shot 2011-10-06 at 1.20.36 PM.png&quot; border=&quot;0&quot; alt=&quot;Screen Shot 2011 10 06 at 1 20 36 PM&quot; width=&quot;600&quot; height=&quot;350&quot; /&gt;&lt;/p&gt;


&lt;p&gt;In honor of Steve Jobs passing, the Bell &amp;amp; Ross &lt;a href=&quot;http://www.bellross.com/&quot;&gt;website&lt;/a&gt; shutdown for a day.  That is pretty classy.&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Transfer Cutting Board</title>
    <link href="http://joshkerr.com/2011/10/transfer-cutting-board/"/>
    <updated>2011-10-05T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/transfer-cutting-board</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://feedproxy.google.com/~r/design-milk/~3/S4aKXnrmnJ4/&quot;&gt;Transfer Cutting Board&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;&lt;img title=&quot;Transfer Cutting Board&quot; src=&quot;http://design-milk.com/images/2011/10/transfer-cutting-board-veggies.jpg&quot; alt=&quot;Transfer Cutting Board&quot; width=&quot;500&quot; height=&quot;324&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;http://www.designspray.de/produkt.php?id=425&quot;&gt;Transfer Cutting Board&lt;/a&gt; by &lt;a href=&quot;http://www.chris-ruby.de/&quot;&gt;chris&amp;amp;ruby&lt;/a&gt; makes transferring your food to plate pretty foolproof.&lt;/p&gt;
&lt;p&gt;&lt;span&gt; &lt;/span&gt;&lt;img title=&quot;Transfer Cutting Board&quot; src=&quot;http://design-milk.com/images/2011/10/transfer-cutting-board-plate.jpg&quot; alt=&quot;Transfer Cutting Board&quot; width=&quot;500&quot; height=&quot;276&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img title=&quot;Transfer Cutting Board&quot; src=&quot;http://design-milk.com/images/2011/10/transfer-cutting-board-solo.jpg&quot; alt=&quot;Transfer Cutting Board&quot; width=&quot;500&quot; height=&quot;258&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://design-milk.com&quot;&gt;Design Milk&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Removal of Italian Wikipedia</title>
    <link href="http://joshkerr.com/2011/10/italy-insane-law-prevents-wikis/"/>
    <updated>2011-10-05T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/italy-insane-law-prevents-wikis</id>
    <content type="html">&lt;p&gt;It is pretty insane that all one has to do to get a website to remove content is complain that the content is hurting their image.  Whether true or not and without any sort of third party discussion, the website has 48 hours to remove the offending content.&lt;/p&gt;


&lt;p&gt;This law is going to seriously limit free speech in Italy.&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;http://feedproxy.google.com/~r/boingboing/iBag/~3/_pqODwqxMcI/italys-insane-internet-law-prompts-removal-of-italian-wikipedia.html&quot;&gt;Italy&amp;#8217;s insane Internet law prompts removal of Italian Wikipedia&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;This proposal, which the Italian Parliament is currently debating, provides, among other things, a requirement to all websites to publish, within 48 hours of the request and without any comment, a correction of any content that the applicant deems detrimental to his/her image.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://boingboing.net&quot;&gt;Boing Boing&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>A Fried Slice Of Heaven: Americas Favorite Bacon Dishes</title>
    <link href="http://joshkerr.com/2011/10/favorite-bacon-dishes/"/>
    <updated>2011-10-05T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/favorite-bacon-dishes</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://digg.com/news/lifestyle/a_fried_slice_of_heaven_americas_favorite_bacon_dishes?utm_campaign=Feed%3A+http%3A%2F%2Fservices.digg.com%2F2.0%2Fstory.getTopNews%3Ftype%3Drss&amp;amp;utm_medium=feed&amp;amp;utm_source=diggapi&quot;&gt;A Fried Slice Of Heaven: Americas Favorite Bacon Dishes&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;The smell of fried swine in the air always get your appetite going. Bet you didn&amp;#8217;t know what the most famous bacon dishes in America are?&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://digg.com/&quot;&gt;digg&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Amazon adds server-side encryption to S3 data service</title>
    <link href="http://joshkerr.com/2011/10/amazon-adds-server-side-encryption-to-s3/"/>
    <updated>2011-10-05T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/amazon-adds-server-side-encryption-to-s3</id>
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://feeds.arstechnica.com/~r/arstechnica/index/~3/CCtM-_dOMk4/amazon-adds-server-side-encryption-to-s3-data-service.ars&quot;&gt;Amazon adds server-side encryption to S3 data service&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;Up until now, Amazon Web Services customers had three choices when it came to protecting data sitting in Amazon Simple Storage Service &amp;#8220;buckets&amp;#8221;: implementing &lt;a href=&quot;http://docs.amazonwebservices.com/AWSJavaSDK/latest/javadoc/com/amazonaws/services/s3/AmazonS3EncryptionClient.html&quot;&gt;AWS&amp;#8217;s S3 Encryption Client&lt;/a&gt; or their own encryption in  application code; encrypting it locally with another application before uploading; or counting on AWS authentication to keep bad people out of their data. The first two ways can create bottlenecks when it comes to getting data in and out of applications to users, and the third is just plain stupid.&lt;/p&gt;
&lt;p&gt;Now there&amp;#8217;s another choice. Amazon has implemented &lt;a href=&quot;http://docs.amazonwebservices.com/AmazonS3/latest/dev/index.html?UsingEncryption.html&quot;&gt;server-side encryption &lt;/a&gt;of data using 256-bit AES crypto as part of the AWS REST, Java, and .NET APIs for S3, and as an option for data uploaded through the AWS management console.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://arstechnica.com/index.php&quot;&gt;Ars Technica&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
  <entry>
    <title>Dropbox is my publish button</title>
    <link href="http://joshkerr.com/2011/10/dropbox-is-my-publish-button/"/>
    <updated>2011-10-04T00:00:00-05:00</updated>
    <id>http://joshkerr.com/2011/10/dropbox-is-my-publish-button</id>
    <content type="html">&lt;p&gt;I found this article from Joe Hewitt discussing his blog setup.  He puts all of his posts in a single file which is then parsed and rendered on his server using custom written node.js server code.  He says keeping the single file of posts removes friction from creating new entries.  Not sure I believe that, but ok.  More:&lt;/p&gt;


&lt;p&gt;&lt;a href=&quot;http://joehewitt.com/2011/10/03/dropbox-is-my-publish-button&quot;&gt;Dropbox is my publish button&lt;/a&gt;:&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;I flipped the switch on my new blog last night. If you&amp;#8217;ve been here before, you might not notice anything different. The design hasn&amp;#8217;t changed, but behind the scenes everything is new.  I&amp;#8217;ve written a CMS for the blog in &lt;a href=&quot;http://nodejs.org&quot;&gt;Node.js&lt;/a&gt; and &lt;a href=&quot;http://expressjs.com&quot;&gt;Express&lt;/a&gt;. It&amp;#8217;s hosted on &lt;a href=&quot;http://aws.amazon.com/ec2/&quot;&gt;EC2&lt;/a&gt;, &lt;a href=&quot;http://aws.amazon.com/s3/&quot;&gt;S3&lt;/a&gt;, and &lt;a href=&quot;http://aws.amazon.com/cloudfront/&quot;&gt;Cloudfront&lt;/a&gt;. All the content is written in &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; and pushed to my server using &lt;a href=&quot;http://dropbox.com&quot;&gt;Dropbox&lt;/a&gt;.  All the code is pulled from repositories on &lt;a href=&quot;http://github.com&quot;&gt;Github&lt;/a&gt; and &lt;a href=&quot;http://npmjs.org&quot;&gt;NPM&lt;/a&gt;.  I use &lt;a href=&quot;http://www.alistapart.com/articles/responsive-web-design/&quot;&gt;responsive design&lt;/a&gt; to adapt nicely to all screen sizes, and use feature testing with &lt;a href=&quot;https://github.com/phiggins42/has.js/&quot;&gt;has.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/joehewitt/hascan/&quot;&gt;hascan&lt;/a&gt; to adapt nicely to all browsers.&lt;/p&gt;
&lt;p&gt;Like many nerd-minded bloggers, I prefer writing in Markdown in my programming text editor instead of writing in a browser.  Many such systems like &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt; are growing in popularity, but these usually require you to use Git to push your Markdown files to the server.  Call me lazy, but I don&amp;#8217;t want to have to go down to the command-line.  I just want to save the file to publish it.  This is where Dropbox comes in.&lt;/p&gt;
&lt;p&gt;All of my blog posts are now in Markdown files, and those files are synchronized to my Linux EC2 servers with Dropbox. My previous blog used Markdown also, but I had to FTP the files to my former Dreamhost server.  I used &lt;a href=&quot;http://www.expandrive.com/&quot;&gt;ExpanDrive&lt;/a&gt;, which made the FTP process relatively painless, but FTP is still flaky, and ExpanDrive doesn&amp;#8217;t deal well with flaky connections.  With Dropbox, the synchronization is effortless. A second or two after I save the Markdown file, the post is up on the blog, and I never have to think about it.&lt;/p&gt;
&lt;h2&gt;Setting up Dropbox&lt;/h2&gt;
&lt;p&gt;I run the Dropbox Linux client on my EC2 server using the default Linux AMI, but this should work on most Linux distros.&lt;/p&gt;
&lt;p&gt;Start by installing the &lt;a href=&quot;http://wiki.dropbox.com/TipsAndTricks/TextBasedLinuxInstall&quot;&gt;Dropbox Linux command line client&lt;/a&gt;.  At the end of the install script, it will ask you to link your Dropbox account by copying and pasting a URL into your browser. &lt;strong&gt;Do not do this yet.&lt;/strong&gt; If you do, it will link your personal Dropbox account to the server, downloading the hundreds of megabytes of files you may have on Dropbox, and exposing potentially sensitive files to any intrepid hacker who breaks into your server.&lt;/p&gt;
&lt;p&gt;You only want to synchronize the files needed by your CMS, so you need to create a new Dropbox account that is dedicated to this purpose. Of course, the Dropbox client only works with one account at a time, and your personal computer is going to be logged into your personal account.  Luckily, Dropbox folder sharing solves this problem nicely.  Once you have your new account, go to your personal account and share the folder containing your CMS files with the new account.  Then you can link the new account to your server.  Be sure you are logged into the new account in your browser, and then load that URL the installer gave you. Done.&lt;/p&gt;
&lt;h2&gt;About that CMS&lt;/h2&gt;
&lt;p&gt;Dropbox alone does not a blog make.  My new CMS, called &lt;a href=&quot;http://github.com/joehewitt/nerve/&quot;&gt;Nerve&lt;/a&gt;, processes those magically synchronized files and spits out a website.  It&amp;#8217;s Apache-licensed and hosted on Github, but I&amp;#8217;m not recommending that anyone other than me use it at this time.  You can learn from it, though.&lt;/p&gt;
&lt;p&gt;Nerve takes advantage of Node.js&amp;#8217;s &lt;a href=&quot;http://nodejs.org/docs/v0.3.1/api/fs.html#fs.watchFile&quot;&gt;built-in file watching&lt;/a&gt; abilities to monitor changes made by Dropbox and then regenerate pages on the fly.  It asks you for a path to your Markdown file, but this can include asterisk wildcards so you can use as many files as the pattern matches.  My entire blog is two Markdown files. One contains all posts from 2002 to 2010 and the other contains all posts from this year.  The files look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is a new post
==================

Blah blah blah.

This is another post [9/30/2011]
================================

Blah blah blah.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nerve uses Markdown&amp;#8217;s level-one header to demarcate the posts.  It then looks for a bracketed timestamp in the header to distinguish posts that are public from ones that are still drafts.  A password-protected drafts page allows me to preview drafts before publishing.  Once they are done, I add the timestamp, save the file, and it&amp;#8217;s published.&lt;/p&gt;
&lt;p&gt;A previous version of Nerve required creating a separate file for each post and giving it a name that contained the timestamp.  I tested this system out on &lt;a href=&quot;http://uponahill.com&quot;&gt;Laura&amp;#8217;s blog&lt;/a&gt; and found that the chore of creating new files was just enough friction to discourage her from starting new posts.  One day I was talking to my friend, &lt;a href=&quot;http://scripting.com&quot;&gt;Dave Winer&lt;/a&gt;, and he told me that his entire blog is contained in a single OPML outline file.  This was a big aha-moment for me, and I rewrote Nerve so that all posts could be within the same file.  This was a big hit with Laura, and I&amp;#8217;ve found her posting volume has gone up significantly ever since.&lt;/p&gt;
&lt;h2&gt;Caveats&lt;/h2&gt;
&lt;p&gt;The Dropbox Linux client works pretty well, but on a couple occasions I&amp;#8217;ve found it has stopped syncing for no apparent reason.  It&amp;#8217;s not the end of the world.  The web server keeps running, but new posts won&amp;#8217;t get published until I SSH into my EC2 instance and restart the Dropbox daemon.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;p&gt;(Via &lt;a href=&quot;http://news.ycombinator.com/&quot;&gt;Hacker News&lt;/a&gt;)&lt;/p&gt;

</content>
  </entry>
  
</feed>
